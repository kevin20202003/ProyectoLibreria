// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoLibreria.Models;

#nullable disable

namespace ProyectoLibreria.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    partial class LibreriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Autor", b =>
                {
                    b.Property<int>("id_autor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_autor"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechanacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_autor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Categoria", b =>
                {
                    b.Property<int>("idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idcategoria"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcategoria");

                    b.HasIndex("categoria")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.DetalleVenta", b =>
                {
                    b.Property<int>("id_detalle_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalle_venta"));

                    b.Property<int>("Librosid_libro")
                        .HasColumnType("int");

                    b.Property<int>("Ventasid_venta")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_libro")
                        .HasColumnType("int");

                    b.Property<int>("id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_detalle_venta");

                    b.HasIndex("Librosid_libro");

                    b.HasIndex("Ventasid_venta");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Editorial", b =>
                {
                    b.Property<int>("id_editorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_editorial"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_editorial");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Libro", b =>
                {
                    b.Property<int>("id_libro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_libro"));

                    b.Property<int>("Autoresid_autor")
                        .HasColumnType("int");

                    b.Property<int>("Categoriasidcategoria")
                        .HasColumnType("int");

                    b.Property<int>("Editorialesid_editorial")
                        .HasColumnType("int");

                    b.Property<int>("anio")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_autor")
                        .HasColumnType("int");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_editorial")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url_libro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_libro");

                    b.HasIndex("Autoresid_autor");

                    b.HasIndex("Categoriasidcategoria");

                    b.HasIndex("Editorialesid_editorial");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Rol", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("URLFotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Venta", b =>
                {
                    b.Property<int>("id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_venta"));

                    b.Property<int>("Usuariosid_usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("fecha_de_venta")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<decimal>("iva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id_venta");

                    b.HasIndex("Usuariosid_usuario");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.DetalleVenta", b =>
                {
                    b.HasOne("ProyectoLibreria.Models.Entidades.Libro", "Libros")
                        .WithMany()
                        .HasForeignKey("Librosid_libro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLibreria.Models.Entidades.Venta", "Ventas")
                        .WithMany()
                        .HasForeignKey("Ventasid_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libros");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Libro", b =>
                {
                    b.HasOne("ProyectoLibreria.Models.Entidades.Autor", "Autores")
                        .WithMany()
                        .HasForeignKey("Autoresid_autor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLibreria.Models.Entidades.Categoria", "Categorias")
                        .WithMany()
                        .HasForeignKey("Categoriasidcategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoLibreria.Models.Entidades.Editorial", "Editoriales")
                        .WithMany()
                        .HasForeignKey("Editorialesid_editorial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autores");

                    b.Navigation("Categorias");

                    b.Navigation("Editoriales");
                });

            modelBuilder.Entity("ProyectoLibreria.Models.Entidades.Venta", b =>
                {
                    b.HasOne("ProyectoLibreria.Models.Entidades.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("Usuariosid_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
